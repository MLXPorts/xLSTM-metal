[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xlstm-metal"
version = "0.3.0"
description = "High-performance xLSTM-7B implementation for Apple Silicon with MAD framework and optimized Metal kernels"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Sydney Renee", email = "sydney@solaceharmony.com"},
]
maintainers = [
    {name = "Sydney Renee", email = "sydney@solaceharmony.com"},
]
license = "Apache-2.0"
keywords = [
    "xlstm",
    "mLSTM",
    "metal",
    "apple-silicon",
    "mlx",
    "neural-architecture",
    "mad-framework",
    "ncps",
    "transformers",
    "deep-learning",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: GPU",
]
dependencies = [
    "mlx>=0.20.0",
    "numpy>=1.21.0",
    "safetensors>=0.4.0",
    "transformers>=4.39.0",
]

[project.optional-dependencies]
torch = [
    "torch>=2.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]
all = [
    "xlstm-metal[torch,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/MLXPorts/xLSTM-Metal"
Repository = "https://github.com/MLXPorts/xLSTM-Metal"
Documentation = "https://github.com/MLXPorts/xLSTM-Metal/docs/XLSTM_MLX_ARCHITECTURE.md"
"Bug Reports" = "https://github.com/MLXPorts/xLSTM-Metal/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["xlstm_metal*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
xlstm_metal = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude backup files
  \.bak$
  | \.bak2$
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__
"test_*.py" = ["S101"]    # Allow assert in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mlx.*",
    "torch.*",
    "transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["xlstm_metal"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--color=yes",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "metal: marks tests requiring Metal GPU",
    "mlx: marks tests requiring MLX framework",
    "torch: marks tests requiring PyTorch",
]
