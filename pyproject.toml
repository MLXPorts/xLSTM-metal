[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xlstm-metal"
version = "0.2.0"
description = "xLSTM on Apple (MPS/MLX), probes, telemetry, and docs"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "SolaceHarmony" }]
license = { text = "Proprietary" }
keywords = ["xLSTM", "MPS", "MLX", "Apple", "telemetry"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: Other/Proprietary License",
  "Operating System :: MacOS",
]
dependencies = [
  "numpy>=1.24",
  "torch>=2.2",
]

[project.optional-dependencies]
dev = [
  "pytest>=7",
  "pytest-xdist",
  "pandas",
  "matplotlib",
]
telemetry = [
  "pandas",
]

[project.scripts]
telem-aggregate = "tools.telem.aggregate:main"
harvest-mdgrep = "tools.harvest.md_grep:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = [".", "src"]
include = [
  "xlstm_official_full*",
  "xlstm_impl*",
  "tools*",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "-v",
  "--strict-markers",
  "--tb=short",
  "--color=yes",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
  "mlx: marks tests that require MLX",
  "pytorch: marks tests that require PyTorch",
  "metal: marks tests that require Metal GPU",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
]
